name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: asia-southeast1
  GKE_CLUSTER: cluster-1
  GKE_ZONE: asia-southeast1-a   
  DEPLOYMENT_NAME: gke-test 
  REPOSITORY: docker-repo-gcp
  

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

  
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # - name: Docker configuration
    #   uses: mr-smithers-excellent/docker-build-push@v5
    #   with:
    #     image: ty55555/multi-client
    #     registry: gcr.io
    #     dockerfile:  ../../client/dockerfile.dev
    #     username: gke-github@civil-forge-334303.iam.gserviceaccount.com
    #     password: ${{ secrets.GKE_SA_KEY }}
   
    

    # Build the Docker image
    - name: Build
      run: |-
        docker build -t ty5555/multi-client -f client/Dockerfile client
        docker build -t ty5555/multi-server -f server/Dockerfile server
        docker build -t ty5555/multi-worker -f worker/Dockerfile worker 
        docker tag ty5555/multi-client "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/docker-repo-gcp/multi-client:$GITHUB_SHA" 
        dokcer tag ty5555/multi-server "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/docker-repo-gcp/multi-server:$GITHUB_SHA"
        docker tag ty5555/multi-worker "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/docker-repo-gcp/multi-worker:$GITHUB_SHA"
      
    # - name: Build
    #   run: |-
    #     docker build \
    #       --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
    #       --build-arg GITHUB_SHA="$GITHUB_SHA" \
    #       --build-arg GITHUB_REF="$GITHUB_REF" \

    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/multi-client:$GITHUB_SHA" 
        docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/multi-server:$GITHUB_SHA" 
        docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/multi-worker:$GITHUB_SHA" 
        
    # docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"
    # # Set up kustomize
    # - name: Set up Kustomize
    #   run: |-
    #     curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
    #     chmod u+x ./kustomize
    # # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        # # replacing the image name in the k8s template
        # ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
        # ./kustomize build . | kubectl apply -f ../../k8s

        kubectl apply -f ./k8s
        kubectl set image deployments/server-deployment server=ty5555/multi-server:$GITHUB_SHA
        kubectl set image deployments/client-deployment client=ty5555/multi-client:$GITHUB_SHA
        kubectl set image deployments/worker-deployment worker=ty5555/multi-server:$GITHUB_SHA
        kubectl get services -o wide
